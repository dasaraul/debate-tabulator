---
import BaseLayout from '../../layouts/BaseLayout.astro';

/**
 * Halaman best speaker dengan integrasi real-time MongoDB produksi
 * @author made by Tamaes
 */
let bestSpeakerData = [];
let error = null;

// Deteksi environment dan return API URL yang benar
const getApiUrl = () => {
  const hostname = Astro.url.hostname;
  const protocol = Astro.url.protocol;
  
  // Development
  if (hostname === 'localhost' || hostname === '127.0.0.1') {
    return 'http://localhost:3001';
  }
  
  // Production domain
  if (hostname === 'debate-tabulator.jawanich.my.id') {
    return `${protocol}//${hostname}/api`;
  }
  
  // Server IP fallback
  if (hostname === '128.199.164.94') {
    return `${protocol}//${hostname}/api`;
  }
  
  // Default
  return `${protocol}//${hostname}/api`;
};

try {
  const apiUrl = getApiUrl();
  const endpoint = apiUrl.includes('/api') ? `${apiUrl}/best-speakers` : `${apiUrl}/api/best-speakers`;
  
  console.log(`Fetching best speakers from: ${endpoint}`);
  
  const response = await fetch(endpoint);
  const result = await response.json();
  
  if (result.success) {
    bestSpeakerData = result.data;
    console.log(`✅ Loaded ${bestSpeakerData.length} speakers from MongoDB`);
  } else {
    error = result.error || 'Unknown error from API';
    console.error('❌ API returned error:', error);
  }
} catch (err) {
  error = err.message;
  console.error('❌ Error fetching best speakers:', err);
}
---

<BaseLayout title="Best Speaker">
  <div class="bg-white p-6 rounded-lg shadow mb-8">
    <div class="flex justify-between items-center mb-4">
      <h2 class="text-2xl font-bold">🏆 Hasil Best Speaker</h2>
      <div class="flex gap-2">
        <button 
          onclick="window.location.reload()" 
          class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition"
        >
          🔄 Refresh Data
        </button>
        <a 
          href="/input" 
          class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition"
        >
          ➕ Input Data Baru
        </a>
      </div>
    </div>
    
    {error ? (
      <div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
        <h3 class="text-red-800 font-semibold mb-2">❌ Error Loading Data from MongoDB</h3>
        <p class="text-red-700 mb-3">Error: {error}</p>
        <div class="text-red-600 text-sm">
          <p class="font-medium mb-2">Kemungkinan penyebab:</p>
          <ul class="list-disc pl-5 space-y-1">
            <li>API server tidak berjalan pada port 3001</li>
            <li>Masalah koneksi MongoDB Atlas</li>
            <li>Nginx configuration error</li>
            <li>CORS issues</li>
            <li>Belum ada data yang diinput ke database</li>
          </ul>
          <p class="mt-3 font-medium">Solusi:</p>
          <ul class="list-disc pl-5 space-y-1">
            <li>Cek status API server: <code class="bg-red-100 px-1 rounded">pm2 status</code></li>
            <li>Restart API server: <code class="bg-red-100 px-1 rounded">pm2 restart debate-tabulator-api</code></li>
            <li>Test API: <code class="bg-red-100 px-1 rounded">curl https://debate-tabulator.jawanich.my.id/health</code></li>
            <li>Input data skor: <a href="/input" class="underline text-blue-600 font-medium">Input Skor →</a></li>
          </ul>
        </div>
      </div>
    ) : bestSpeakerData.length === 0 ? (
      <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6">
        <h3 class="text-yellow-800 font-semibold mb-2">📭 Belum Ada Data Best Speaker</h3>
        <p class="text-yellow-700 mb-2">MongoDB terhubung tapi belum ada data best speaker tersedia.</p>
        <div class="mt-3">
          <a 
            href="/input" 
            class="inline-block bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition font-medium"
          >
            🚀 Input Data Skor Pertama
          </a>
        </div>
      </div>
    ) : (
      <>
        <p class="mb-6">
          Berikut adalah ranking best speaker berdasarkan akumulasi nilai dari seluruh ronde.
          Data diambil secara real-time dari <strong>MongoDB Atlas</strong> produksi.
        </p>
        
        <div class="mb-4 bg-green-50 border border-green-200 rounded-lg p-3">
          <div class="flex items-center justify-between">
            <p class="text-green-800 text-sm">
              ✅ Data loaded from <strong>MongoDB Atlas</strong> • 
              Total speakers: <strong>{bestSpeakerData.length}</strong>
            </p>
            <p class="text-green-700 text-xs">
              Updated: <strong>{new Date().toLocaleString()}</strong>
            </p>
          </div>
        </div>
        
        <div class="overflow-x-auto">
          <table class="min-w-full bg-white border">
            <thead>
              <tr class="bg-gray-100">
                <th class="py-3 px-4 border text-left">Rank</th>
                <th class="py-3 px-4 border text-left">Nama</th>
                <th class="py-3 px-4 border text-left">Tim</th>
                <th class="py-3 px-4 border text-left">Universitas</th>
                <th class="py-3 px-4 border text-left">Total Skor</th>
                <th class="py-3 px-4 border text-left">Rata-Rata</th>
                <th class="py-3 px-4 border text-left">Ronde</th>
              </tr>
            </thead>
            <tbody>
              {bestSpeakerData.map((speaker, index) => (
                <tr key={speaker._id} class={`${index % 2 === 0 ? 'bg-gray-50' : 'bg-white'} hover:bg-blue-50 transition`}>
                  <td class="py-3 px-4 border">
                    <span class={`
                      inline-flex items-center justify-center w-8 h-8 rounded-full font-bold
                      ${index === 0 ? 'bg-yellow-400 text-yellow-900 shadow-lg' : 
                        index === 1 ? 'bg-gray-400 text-white shadow-md' : 
                        index === 2 ? 'bg-amber-600 text-white shadow-md' : 
                        'bg-gray-200 text-gray-700'}
                    `}>
                      {speaker.rank}
                    </span>
                  </td>
                  <td class="py-3 px-4 border font-medium">{speaker.name}</td>
                  <td class="py-3 px-4 border">{speaker.team}</td>
                  <td class="py-3 px-4 border text-sm">{speaker.university}</td>
                  <td class="py-3 px-4 border font-bold text-lg text-green-600">{speaker.totalScore}</td>
                  <td class="py-3 px-4 border font-medium">{speaker.averageScore}</td>
                  <td class="py-3 px-4 border text-center">
                    <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">
                      {speaker.roundsCount} ronde
                    </span>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
        
        {/* Top 3 Podium */}
        {bestSpeakerData.length >= 3 && (
          <div class="mt-12">
            <h3 class="text-xl font-semibold mb-6 text-center">🏆 Podium Best Speaker</h3>
            
            <div class="flex justify-center items-end space-x-8">
              <!-- Second Place -->
              <div class="flex flex-col items-center">
                <div class="text-center mb-4">
                  <div class="text-lg font-bold">{bestSpeakerData[1].name}</div>
                  <div class="text-sm text-gray-600">{bestSpeakerData[1].team}</div>
                  <div class="text-xs text-gray-500">{bestSpeakerData[1].university}</div>
                </div>
                <div class="w-24 h-24 rounded-full bg-gray-300 flex items-center justify-center mb-4 shadow-lg">
                  <span class="text-gray-700 text-xl font-bold">🥈</span>
                </div>
                <div class="w-32 bg-gray-400 h-48 flex flex-col items-center justify-center text-white rounded-t-lg shadow-lg">
                  <div class="text-2xl font-bold">{bestSpeakerData[1].totalScore}</div>
                  <div class="text-sm">Total</div>
                </div>
                <div class="bg-gray-200 w-32 py-3 text-center rounded-b-lg">
                  <div class="font-medium">Runner Up</div>
                  <div class="text-xs text-gray-600">Avg: {bestSpeakerData[1].averageScore}</div>
                </div>
              </div>
              
              <!-- First Place -->
              <div class="flex flex-col items-center">
                <div class="text-center mb-4">
                  <div class="text-lg font-bold">{bestSpeakerData[0].name}</div>
                  <div class="text-sm text-gray-600">{bestSpeakerData[0].team}</div>
                  <div class="text-xs text-gray-500">{bestSpeakerData[0].university}</div>
                </div>
                <div class="w-32 h-32 rounded-full bg-yellow-200 border-4 border-yellow-400 flex items-center justify-center mb-4 shadow-xl">
                  <span class="text-yellow-800 text-3xl">👑</span>
                </div>
                <div class="w-32 bg-yellow-500 h-64 flex flex-col items-center justify-center text-white rounded-t-lg shadow-xl">
                  <div class="text-3xl font-bold">{bestSpeakerData[0].totalScore}</div>
                  <div class="text-sm">Total</div>
                </div>
                <div class="bg-yellow-200 w-32 py-3 text-center rounded-b-lg">
                  <div class="font-bold text-yellow-800">🏆 Best Speaker</div>
                  <div class="text-xs text-yellow-700">Avg: {bestSpeakerData[0].averageScore}</div>
                </div>
              </div>
              
              <!-- Third Place -->
              <div class="flex flex-col items-center">
                <div class="text-center mb-4">
                  <div class="text-lg font-bold">{bestSpeakerData[2].name}</div>
                  <div class="text-sm text-gray-600">{bestSpeakerData[2].team}</div>
                  <div class="text-xs text-gray-500">{bestSpeakerData[2].university}</div>
                </div>
                <div class="w-20 h-20 rounded-full bg-orange-200 flex items-center justify-center mb-4 shadow-md">
                  <span class="text-orange-700 text-lg font-bold">🥉</span>
                </div>
                <div class="w-32 bg-orange-400 h-36 flex flex-col items-center justify-center text-white rounded-t-lg shadow-lg">
                  <div class="text-2xl font-bold">{bestSpeakerData[2].totalScore}</div>
                  <div class="text-sm">Total</div>
                </div>
                <div class="bg-orange-200 w-32 py-3 text-center rounded-b-lg">
                  <div class="font-medium">Third Place</div>
                  <div class="text-xs text-orange-700">Avg: {bestSpeakerData[2].averageScore}</div>
                </div>
              </div>
            </div>
          </div>
        )}
      </>
    )}
  </div>
  
  <!-- System Info -->
  <div class="bg-blue-50 p-4 rounded-lg border border-blue-200">
    <h3 class="font-semibold mb-2">🔗 Production System Info:</h3>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
      <ul class="list-disc pl-5 space-y-1">
        <li>Data source: <strong>MongoDB Atlas (Production)</strong></li>
        <li>API server: <strong>Express.js (Port 3001)</strong></li>
        <li>Domain: <strong>debate-tabulator.jawanich.my.id</strong></li>
        <li>Total skor dihitung otomatis dari semua ronde</li>
      </ul>
      <ul class="list-disc pl-5 space-y-1">
        <li>Peringkat berdasarkan total tertinggi → average score</li>
        <li>Auto-update setiap ada input baru</li>
        <li>API Endpoint: <code class="bg-blue-100 px-1 rounded">/api/best-speakers</code></li>
        <li>Backup & monitoring with PM2</li>
      </ul>
    </div>
  </div>
</BaseLayout>

<script is:inline>
  /**
   * Optional: Auto-refresh untuk data real-time
   * @author made by Tamaes
   */
  
  // Tampilkan informasi koneksi di console
  console.log('🏆 Best Speakers Page Loaded');
  console.log('🔗 Current domain:', window.location.hostname);
  console.log('📡 API calls will be made to:', window.location.hostname === 'localhost' ? 'localhost:3001' : window.location.hostname + '/api');
  
  // Function untuk manual refresh (connected to button)
  window.refreshData = function() {
    console.log('🔄 Manual refresh triggered');
    window.location.reload();
  };
  
  // Optional: Auto-refresh every 2 minutes
  // Uncomment untuk enable auto-refresh
  /*
  setInterval(() => {
    console.log('🔄 Auto-refreshing best speaker data...');
    window.location.reload();
  }, 120000); // 2 minutes
  */
</script>
