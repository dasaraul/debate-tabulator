---
import BaseLayout from '../../layouts/BaseLayout.astro';

/**
 * Halaman best speaker yang mengambil data dari API server
 * @author made by Tamaes
 */
let bestSpeakerData = [];
let error = null;

try {
  // Try API server first, fallback to main domain
  const apiUrl = process.env.NODE_ENV === 'development' 
    ? 'http://localhost:3001' 
    : `${Astro.url.protocol}//${Astro.url.hostname}:3001`;
    
  const response = await fetch(`${apiUrl}/api/best-speakers`);
  const result = await response.json();
  
  if (result.success) {
    bestSpeakerData = result.data;
  } else {
    error = result.error;
  }
} catch (err) {
  error = err.message;
  console.error('Error fetching best speakers:', err);
}
---

<BaseLayout title="Best Speaker">
  <div class="bg-white p-6 rounded-lg shadow mb-8">
    <div class="flex justify-between items-center mb-4">
      <h2 class="text-2xl font-bold">Hasil Best Speaker</h2>
      <button 
        onclick="window.location.reload()" 
        class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
      >
        🔄 Refresh Data
      </button>
    </div>
    
    {error ? (
      <div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
        <h3 class="text-red-800 font-semibold mb-2">❌ Error Loading Data</h3>
        <p class="text-red-700">{error}</p>
        <div class="text-red-600 text-sm mt-2">
          <p>Possible causes:</p>
          <ul class="list-disc pl-5">
            <li>API server not running on port 3001</li>
            <li>Database connection issues</li>
            <li>Network connectivity problems</li>
          </ul>
          <p class="mt-2 font-medium">Solutions:</p>
          <ul class="list-disc pl-5">
            <li>Check if API server is running: <code class="bg-red-100 px-1 rounded">pm2 status</code></li>
            <li>Restart API server: <code class="bg-red-100 px-1 rounded">pm2 restart debate-api</code></li>
            <li>Check API health: <code class="bg-red-100 px-1 rounded">curl http://localhost:3001/health</code></li>
          </ul>
        </div>
      </div>
    ) : bestSpeakerData.length === 0 ? (
      <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6">
        <h3 class="text-yellow-800 font-semibold mb-2">📭 No Data Available</h3>
        <p class="text-yellow-700">Belum ada data best speaker tersedia.</p>
        <p class="text-yellow-600 text-sm mt-2">
          Silakan <a href="/input" class="underline text-blue-600">input data skor</a> terlebih dahulu.
        </p>
      </div>
    ) : (
      <>
        <p class="mb-6">
          Berikut adalah ranking best speaker berdasarkan akumulasi nilai dari seluruh ronde.
          Data diambil secara real-time dari MongoDB melalui API server.
        </p>
        
        <div class="mb-4 bg-green-50 border border-green-200 rounded-lg p-3">
          <p class="text-green-800 text-sm">
            ✅ Data berhasil dimuat dari API server • 
            Total speaker: <strong>{bestSpeakerData.length}</strong> • 
            Last updated: <strong>{new Date().toLocaleString()}</strong>
          </p>
        </div>
        
        <div class="overflow-x-auto">
          <table class="min-w-full bg-white border">
            <thead>
              <tr class="bg-gray-100">
                <th class="py-3 px-4 border text-left">Rank</th>
                <th class="py-3 px-4 border text-left">Nama</th>
                <th class="py-3 px-4 border text-left">Tim</th>
                <th class="py-3 px-4 border text-left">Universitas</th>
                <th class="py-3 px-4 border text-left">Total Skor</th>
                <th class="py-3 px-4 border text-left">Rata-Rata</th>
                <th class="py-3 px-4 border text-left">Jumlah Ronde</th>
              </tr>
            </thead>
            <tbody>
              {bestSpeakerData.map((speaker, index) => (
                <tr key={speaker._id} class={index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}>
                  <td class="py-3 px-4 border">
                    <span class={`
                      inline-flex items-center justify-center w-8 h-8 rounded-full font-bold
                      ${index === 0 ? 'bg-yellow-400 text-yellow-900' : 
                        index === 1 ? 'bg-gray-400 text-white' : 
                        index === 2 ? 'bg-amber-600 text-white' : 
                        'bg-gray-200 text-gray-700'}
                    `}>
                      {speaker.rank}
                    </span>
                  </td>
                  <td class="py-3 px-4 border font-medium">{speaker.name}</td>
                  <td class="py-3 px-4 border">{speaker.team}</td>
                  <td class="py-3 px-4 border">{speaker.university}</td>
                  <td class="py-3 px-4 border font-bold text-lg text-green-600">{speaker.totalScore}</td>
                  <td class="py-3 px-4 border">{speaker.averageScore}</td>
                  <td class="py-3 px-4 border">{speaker.roundsCount}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
        
        <!-- Top 3 Visualization -->
        {bestSpeakerData.length >= 3 && (
          <div class="mt-12">
            <h3 class="text-xl font-semibold mb-6">🏆 Top 3 Best Speaker</h3>
            
            <div class="flex justify-center items-end space-x-8">
              <!-- Second Place -->
              <div class="flex flex-col items-center">
                <div class="text-lg font-bold mb-2">{bestSpeakerData[1].name}</div>
                <div class="text-sm text-gray-600 mb-4">{bestSpeakerData[1].team}</div>
                <div class="w-24 h-24 rounded-full bg-gray-200 flex items-center justify-center mb-4">
                  <span class="text-gray-600 text-xl font-bold">2</span>
                </div>
                <div class="w-32 bg-gray-400 h-48 flex items-center justify-center text-white text-2xl font-bold rounded-t-lg">
                  {bestSpeakerData[1].totalScore}
                </div>
                <div class="bg-gray-200 w-32 py-3 text-center rounded-b-lg font-medium">
                  Runner Up
                  <div class="text-xs text-gray-600">Avg: {bestSpeakerData[1].averageScore}</div>
                </div>
              </div>
              
              <!-- First Place -->
              <div class="flex flex-col items-center">
                <div class="text-lg font-bold mb-2">{bestSpeakerData[0].name}</div>
                <div class="text-sm text-gray-600 mb-4">{bestSpeakerData[0].team}</div>
                <div class="w-32 h-32 rounded-full bg-yellow-100 border-4 border-yellow-400 flex items-center justify-center mb-4">
                  <span class="text-yellow-600 text-2xl font-bold">👑</span>
                </div>
                <div class="w-32 bg-yellow-500 h-64 flex items-center justify-center text-white text-2xl font-bold rounded-t-lg">
                  {bestSpeakerData[0].totalScore}
                </div>
                <div class="bg-yellow-200 w-32 py-3 text-center rounded-b-lg font-medium">
                  🏆 Best Speaker
                  <div class="text-xs text-yellow-700">Avg: {bestSpeakerData[0].averageScore}</div>
                </div>
              </div>
              
              <!-- Third Place -->
              <div class="flex flex-col items-center">
                <div class="text-lg font-bold mb-2">{bestSpeakerData[2].name}</div>
                <div class="text-sm text-gray-600 mb-4">{bestSpeakerData[2].team}</div>
                <div class="w-20 h-20 rounded-full bg-orange-100 flex items-center justify-center mb-4">
                  <span class="text-orange-600 text-lg font-bold">3</span>
                </div>
                <div class="w-32 bg-orange-400 h-32 flex items-center justify-center text-white text-2xl font-bold rounded-t-lg">
                  {bestSpeakerData[2].totalScore}
                </div>
                <div class="bg-orange-200 w-32 py-3 text-center rounded-b-lg font-medium">
                  🥉 Third Place
                  <div class="text-xs text-orange-700">Avg: {bestSpeakerData[2].averageScore}</div>
                </div>
              </div>
            </div>
          </div>
        )}
      </>
    )}
  </div>
  
  <div class="bg-blue-50 p-4 rounded-lg border border-blue-200">
    <h3 class="font-semibold mb-2">🔗 Data Connection Info:</h3>
    <ul class="list-disc pl-5 space-y-1 text-sm">
      <li>Data diambil secara real-time dari <strong>MongoDB</strong> melalui API server</li>
      <li>Total dihitung dari penjumlahan skor di semua ronde yang telah diinput</li>
      <li>Rata-rata dihitung dari Total dibagi jumlah ronde yang diikuti</li>
      <li>Peringkat ditentukan berdasarkan Total skor (dari tertinggi)</li>
      <li>API Endpoint: <code class="bg-blue-100 px-1 rounded">/api/best-speakers</code></li>
    </ul>
  </div>
</BaseLayout>

<script>
  /**
   * Auto refresh setiap 30 detik untuk data terbaru (optional)
   * @author made by Tamaes
   */
  // Uncomment untuk enable auto-refresh
  // setInterval(() => {
  //   window.location.reload();
  // }, 30000); // 30 detik
</script>
